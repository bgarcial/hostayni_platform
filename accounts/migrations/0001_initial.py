# -*- coding: utf-8 -*-
# Generated by Django 1.10.7 on 2018-01-21 22:44
from __future__ import unicode_literals

import accounts.models
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import django_countries.fields
import phonenumber_field.modelfields
import taggit.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('host_information', '0001_initial'),
        ('taggit', '0002_auto_20150616_2121'),
        ('auth', '0008_alter_user_username_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, null=True, unique=True, validators=[django.core.validators.RegexValidator('^[\\w.@+-]+$', 'Enter a valid email address.', 'invalid')], verbose_name='correo electrónico')),
                ('username', models.CharField(help_text='Required. 30 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=30, null=True, validators=[django.core.validators.RegexValidator('^[\\w.@+-]+$', 'Enter a valid username.', 'invalid')], verbose_name='username')),
                ('slug', models.SlugField(blank=True, max_length=100)),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=30, verbose_name='last name')),
                ('enterprise_name', models.CharField(blank=True, max_length=100, verbose_name='Nombre de la organización')),
                ('gender', models.CharField(blank=True, choices=[('M', 'Masculino'), ('F', 'Femenino')], max_length=10, verbose_name='Género')),
                ('country_of_origin', django_countries.fields.CountryField(blank=True, max_length=2, verbose_name='Pais de origen')),
                ('city_of_origin', models.CharField(blank=True, max_length=255, verbose_name='Ciudad de origen')),
                ('country_current_residence', django_countries.fields.CountryField(blank=True, max_length=2, verbose_name='País de residencia')),
                ('city_current_residence', models.CharField(blank=True, max_length=255, verbose_name='Ciudad de residencia')),
                ('phone_number', phonenumber_field.modelfields.PhoneNumberField(blank=True, help_text='Por favor use el siguiente formato: <em>+Country Code-Number</em>.', max_length=128, verbose_name='Número de contacto')),
                ('address', models.CharField(blank=True, max_length=128, verbose_name='Dirección')),
                ('biography', models.TextField(blank=True, null=True, verbose_name='Biografía')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Descripción')),
                ('avatar', models.ImageField(blank=True, null=True, upload_to=accounts.models.get_image_path, verbose_name='Fotografía de perfil')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now)),
                ('date_of_birth', models.DateField(blank=True, help_text='Por favor use el formato: <em>YYYY-MM-DD</em>.', null=True, verbose_name='Fecha de nacimiento')),
                ('creation_date', models.DateField(blank=True, help_text='Por favor use el formato: <em>YYYY-MM-DD</em>.', null=True, verbose_name='Fecha de creación')),
                ('user_type', models.CharField(choices=[('P', 'Persona'), ('O', 'Organización')], default=False, max_length=10, verbose_name='Tipo de Usuario')),
                ('is_student', models.BooleanField(default=False, verbose_name='Estudiante')),
                ('is_professor', models.BooleanField(default=False, verbose_name='Profesor')),
                ('is_executive', models.BooleanField(default=False, verbose_name='Ejecutivo/Emprendedor')),
                ('is_study_host', models.BooleanField(default=False, verbose_name='Anfitrion de estudio')),
                ('is_innovation_host', models.BooleanField(default=False, verbose_name='Anfitrión de innovación')),
                ('is_hosting_host', models.BooleanField(default=False, verbose_name='Anfitrión de alojamiento')),
                ('is_entertainment_host', models.BooleanField(default=False, verbose_name='Anfitrión de entretenimiento')),
                ('is_other_services_host', models.BooleanField(default=False, verbose_name='Anfitrión de otros servicios')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('entertainment_activities', models.ManyToManyField(blank=True, help_text='Mantenga presionado "Control" (o "Command" en un Mac), y haga click en las opciones que desea selecionar.', to='host_information.EntertainmentActivities', verbose_name='Actividades de entretenimiento')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('speak_languages', models.ManyToManyField(blank=True, help_text='Mantenga presionado "Control" (o "Command" en un Mac), y haga click en las opciones que desea selecionar.', related_name='users', to='host_information.SpeakLanguages', verbose_name='Idiomas')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name_plural': 'Usuarios en la plataforma',
                'db_table': 'auth_user',
            },
        ),
        migrations.CreateModel(
            name='EntertainmentHostProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(blank=True, max_length=100)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Usuarios con perfil de anfitriones de entretenimiento',
            },
        ),
        migrations.CreateModel(
            name='ExecutiveProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(blank=True, max_length=100)),
                ('enterprise_name', models.CharField(max_length=255, verbose_name='Compañía con la cual esta vinculado')),
                ('innovation_topics_choice', models.CharField(max_length=255, verbose_name='Areas de innovación de su elección')),
                ('educational_titles', models.CharField(max_length=255, verbose_name='Títulos educativos')),
                ('complete_studies_school', models.CharField(max_length=255, verbose_name='Institución en donde terminó sus estudios anteriores')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Usuarios con perfil de ejecutivos',
            },
        ),
        migrations.CreateModel(
            name='InnovationHostProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(blank=True, max_length=100)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Usuarios con perfil de anfitriones de innovación',
            },
        ),
        migrations.CreateModel(
            name='OtherServicesHostProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(blank=True, max_length=100)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Usuarios con perfil de anfitriones de servicios varios',
            },
        ),
        migrations.CreateModel(
            name='ProfessorProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(blank=True, max_length=100)),
                ('occupation', models.CharField(max_length=255)),
                ('origin_education_school', models.CharField(max_length=128, verbose_name='Institución de educación de origen')),
                ('current_education_school', models.CharField(max_length=128, verbose_name='Institución educativa en la cual está vinculado en su actual lugar residencia')),
                ('educational_titles', models.CharField(max_length=255, verbose_name='Títulos educativos')),
                ('complete_studies_school', models.CharField(max_length=255, verbose_name='Institución en donde terminó sus estudios anteriores')),
                ('knowledge_topics_choice', models.CharField(max_length=255, verbose_name='Areas de conocimiento de su elección')),
                ('research_groups', models.CharField(max_length=255, verbose_name='Grupos de Investigación a los que pertenece')),
                ('autorship_publications', models.CharField(max_length=255, verbose_name='Publications of its authorship')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Usuarios con perfil de profesores',
            },
        ),
        migrations.CreateModel(
            name='StudentProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(blank=True, max_length=100)),
                ('origin_education_school', models.CharField(max_length=128, verbose_name='Institución de educación de origen')),
                ('current_education_school', models.CharField(max_length=128, verbose_name='Institución educativa en la cual está vinculado en su actual lugar residencia')),
                ('extra_occupation', models.CharField(max_length=128, verbose_name='Ocupación Extra')),
                ('educational_titles', models.CharField(max_length=255, verbose_name='Titulos Educativos')),
                ('complete_studies_school', models.CharField(max_length=255, verbose_name='Institución en donde completó sus estudios anteriores')),
                ('knowledge_topics_choice', models.CharField(max_length=255, verbose_name='Áreas de conocimiento de su elección')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Usuarios con perfil de estudiantes',
            },
        ),
        migrations.CreateModel(
            name='StudyHostProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(blank=True, max_length=100)),
                ('institution_type', models.CharField(choices=[('Universidad', 'Universidad'), ('Institución Universitaria', 'Institución Universitaria'), ('Institución Tecnológica Profesiona', 'Institución Técnica y/o Tecnológica '), ('Centro de Educación Contínua', 'Centro de Educación Contínua'), ('Centro de Educación Contínua', 'Centro de Educación para la vida y el trabajo')], max_length=255, verbose_name='Tipo de institución')),
                ('institute_character', models.CharField(choices=[('PRIVATE', 'Privada'), ('PUBLIC', 'Pública'), ('MIXED', 'Privada - Pública')], max_length=7, verbose_name='Caracter de la institución')),
                ('high_quality_accreditations', models.CharField(max_length=255, verbose_name='Acreditaciones de alta calidad')),
                ('students_number', models.CharField(choices=[('Menos de 1.000 estudiantes', 'Menos de 1.000 estudiantes'), ('Entre 1.000 y 10.000 estudiantes', 'Entre 1.000 y 10.000 estudiantes'), ('Entre 10.000 y 20.000 estudiantes', 'Entre 10.000 y 20.000 estudiantes'), ('Mayor a 20.000 estudiantes', 'Mayor a 20.000 estudiantes')], max_length=255, verbose_name='Número de estudiantes')),
                ('rankings_classification', models.TextField(verbose_name='Clasificación en ranking')),
                ('knowledge_topics', taggit.managers.TaggableManager(help_text='Una lista de temas separada por comas.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Áreas de conocimiento')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Usuarios con perfil de anfitriones de estudio',
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('following', models.ManyToManyField(blank=True, related_name='followed_by', to=settings.AUTH_USER_MODEL)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
